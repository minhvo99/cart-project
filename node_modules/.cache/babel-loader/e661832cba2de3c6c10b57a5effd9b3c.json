{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hoc Tap\\\\cartproject\\\\src\\\\containers\\\\CartContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cart from '../components/Cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showCartItem = cart => {\n      let result = null;\n      return result;\n    };\n  }\n\n  render() {\n    let {\n      cart\n    } = this.props;\n    console.log(cart);\n    return /*#__PURE__*/_jsxDEV(Cart, {\n      children: this.showCartItem(cart)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      image1: PropTypes.string.isRequired,\n      image2: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      description: PropTypes.string.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }).isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nconst mapDispathToProps = (dispath, props) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispathToProps)(CartContainer);","map":{"version":3,"sources":["D:/Hoc Tap/cartproject/src/containers/CartContainer.js"],"names":["React","Component","connect","PropTypes","Cart","CartContainer","showCartItem","cart","result","render","props","console","log","propTypes","arrayOf","shape","product","id","string","isRequired","name","image1","image2","price","number","description","inventory","rating","quantity","mapStateToProps","state","mapDispathToProps","dispath"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAUlCK,YAVkC,GAUlBC,IAAD,IAAU;AACrB,UAAIC,MAAM,GAAG,IAAb;AAEA,aAAOA,MAAP;AACH,KAdiC;AAAA;;AAClCC,EAAAA,MAAM,GAAG;AACL,QAAI;AAACF,MAAAA;AAAD,QAAS,KAAKG,KAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,wBACC,QAAC,IAAD;AAAA,gBACI,KAAKD,YAAL,CAAkBC,IAAlB;AADJ;AAAA;AAAA;AAAA;AAAA,YADD;AAKH;;AATiC;;AAiBtCF,aAAa,CAACQ,SAAd,GAAyB;AACrBN,EAAAA,IAAI,EAAGJ,SAAS,CAACW,OAAV,CAAkBX,SAAS,CAACY,KAAV,CAAgB;AACnCC,IAAAA,OAAO,EAAGb,SAAS,CAACY,KAAV,CAAgB;AACxBE,MAAAA,EAAE,EAAGd,SAAS,CAACe,MAAV,CAAiBC,UADE;AAExBC,MAAAA,IAAI,EAACjB,SAAS,CAACe,MAAV,CAAiBC,UAFE;AAGxBE,MAAAA,MAAM,EAAClB,SAAS,CAACe,MAAV,CAAiBC,UAHA;AAIxBG,MAAAA,MAAM,EAACnB,SAAS,CAACe,MAAV,CAAiBC,UAJA;AAKxBI,MAAAA,KAAK,EAACpB,SAAS,CAACqB,MAAV,CAAiBL,UALC;AAMxBM,MAAAA,WAAW,EAACtB,SAAS,CAACe,MAAV,CAAiBC,UANL;AAOxBO,MAAAA,SAAS,EAACvB,SAAS,CAACqB,MAAV,CAAiBL,UAPH;AAQxBQ,MAAAA,MAAM,EAACxB,SAAS,CAACqB,MAAV,CAAiBL;AARA,KAAhB,EASPA,UAVgC;AAWnCS,IAAAA,QAAQ,EAAGzB,SAAS,CAACqB,MAAV,CAAiBL;AAXO,GAAhB,CAAlB,EAYCA;AAba,CAAzB;;AAgBA,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHvB,IAAAA,IAAI,EAAGuB,KAAK,CAACvB;AADV,GAAP;AAGH,CAJD;;AAMA,MAAMwB,iBAAiB,GAAG,CAACC,OAAD,EAAUtB,KAAV,KAAoB;AAC1C,SAAO,EAAP;AAGH,CAJD;;AAMA,eAAeR,OAAO,CAAC2B,eAAD,EAAkBE,iBAAlB,CAAP,CAA6C1B,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport Cart from '../components/Cart'\r\n\r\nclass CartContainer extends Component {\r\n    render() {\r\n        let {cart} = this.props\r\n        console.log(cart);\r\n        return (\r\n         <Cart>\r\n            {this.showCartItem(cart)}\r\n         </Cart>\r\n        );\r\n    }\r\n    showCartItem = (cart) => {\r\n        let result = null;\r\n        \r\n        return result\r\n    }\r\n}\r\n\r\nCartContainer.propTypes ={\r\n    cart : PropTypes.arrayOf(PropTypes.shape({\r\n          product : PropTypes.shape({\r\n            id : PropTypes.string.isRequired,\r\n            name:PropTypes.string.isRequired ,\r\n            image1:PropTypes.string.isRequired,\r\n            image2:PropTypes.string.isRequired ,\r\n            price:PropTypes.number.isRequired,\r\n            description:PropTypes.string.isRequired,\r\n            inventory:PropTypes.number.isRequired,\r\n            rating:PropTypes.number.isRequired\r\n          }).isRequired,\r\n          quantity : PropTypes.number.isRequired\r\n        })).isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cart : state.cart\r\n    }\r\n}\r\n\r\nconst mapDispathToProps = (dispath, props) => {\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps) (CartContainer);"]},"metadata":{},"sourceType":"module"}