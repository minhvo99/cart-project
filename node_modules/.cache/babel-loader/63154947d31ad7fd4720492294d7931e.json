{"ast":null,"code":"// import * as types from '../actions/index'\nimport * as types from './../constans/index'; // var data = JSON.parse(localStorage.setItem(\"CART\"))\n// var initialState = data ? data : []\n\nconst cart = (state = initialState, action) => {\n  let {\n    product,\n    quantity\n  } = action;\n  let index = -1;\n\n  switch (action.type) {\n    case types.ADD_TO_CART:\n      index = findProductInCart(state, product);\n\n      if (index !== -1) {\n        state[index].quantity += quantity;\n      } else {\n        state.push({\n          product,\n          quantity\n        });\n      } //console.log(action);\n\n\n      return [...state];\n\n    default:\n      return [...state];\n  }\n};\n\nlet findProductInCart = (cart, product) => {\n  let index = -1;\n\n  if (cart.length > 0) {\n    for (let i = 0; i < cart.length; i++) {\n      if (cart[i].product.id === product.id) {\n        console.log(index);\n        index = i;\n        break;\n      }\n    }\n  }\n\n  return index;\n};\n\nexport default cart;","map":{"version":3,"sources":["D:/Hoc Tap/cartproject/src/reducers/cart.js"],"names":["types","cart","state","initialState","action","product","quantity","index","type","ADD_TO_CART","findProductInCart","push","length","i","id","console","log"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,qBAAvB,C,CAEA;AAEA;;AAGA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGC,YAAT,EAAuBC,MAAvB,KAAkC;AAC3C,MAAI;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAsBF,MAA1B;AACA,MAAIG,KAAK,GAAG,CAAC,CAAb;;AACA,UAAOH,MAAM,CAACI,IAAd;AACI,SAAKR,KAAK,CAACS,WAAX;AACIF,MAAAA,KAAK,GAAGG,iBAAiB,CAACR,KAAD,EAAQG,OAAR,CAAzB;;AACA,UAAGE,KAAK,KAAK,CAAC,CAAd,EAAgB;AACZL,QAAAA,KAAK,CAACK,KAAD,CAAL,CAAaD,QAAb,IAAyBA,QAAzB;AACH,OAFD,MAEK;AACDJ,QAAAA,KAAK,CAACS,IAAN,CAAW;AACXN,UAAAA,OADW;AAEXC,UAAAA;AAFW,SAAX;AAIH,OATL,CAUI;;;AACA,aAAO,CAAC,GAAGJ,KAAJ,CAAP;;AACJ;AAAU,aAAO,CAAC,GAAGA,KAAJ,CAAP;AAbd;AAeH,CAlBD;;AAmBC,IAAIQ,iBAAiB,GAAE,CAACT,IAAD,EAAOI,OAAP,KAAmB;AACtC,MAAIE,KAAK,GAAE,CAAC,CAAZ;;AACD,MAAGN,IAAI,CAACW,MAAL,GAAc,CAAjB,EAAmB;AACf,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,IAAI,CAACW,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAClC,UAAGZ,IAAI,CAACY,CAAD,CAAJ,CAAQR,OAAR,CAAgBS,EAAhB,KAAuBT,OAAO,CAACS,EAAlC,EAAqC;AACjCC,QAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAA,QAAAA,KAAK,GAAGM,CAAR;AACA;AACH;AAEH;AACL;;AACA,SAAON,KAAP;AACH,CAbD;;AAeD,eAAeN,IAAf","sourcesContent":["// import * as types from '../actions/index'\r\nimport * as types from './../constans/index'\r\n\r\n// var data = JSON.parse(localStorage.setItem(\"CART\"))\r\n\r\n// var initialState = data ? data : []\r\n\r\n\r\nconst cart = (state = initialState, action) => {\r\n    let {product, quantity} = action;\r\n    let index = -1;\r\n    switch(action.type){\r\n        case types.ADD_TO_CART:\r\n            index = findProductInCart(state, product)\r\n            if(index !== -1){\r\n                state[index].quantity += quantity\r\n            }else{\r\n                state.push({\r\n                product,\r\n                quantity\r\n            })\r\n            }\r\n            //console.log(action);\r\n            return [...state]\r\n        default : return [...state]\r\n    }\r\n}\r\n let findProductInCart =(cart, product) => {\r\n     let index =-1;\r\n    if(cart.length > 0){\r\n        for (let i = 0; i < cart.length; i++) {\r\n            if(cart[i].product.id === product.id){\r\n                console.log(index);\r\n                index = i;\r\n                break;\r\n            }\r\n             \r\n         }\r\n    }\r\n     return index\r\n }\r\n\r\nexport default cart"]},"metadata":{},"sourceType":"module"}