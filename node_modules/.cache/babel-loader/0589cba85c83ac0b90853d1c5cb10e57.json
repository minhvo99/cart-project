{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hoc Tap\\\\cartproject\\\\src\\\\containers\\\\CartContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProductItem from '../components/ProductItem';\nimport Product from '../components/Product';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showProducts = products => {\n      let result = null;\n\n      if (products.length > 0) {\n        result = products.map((product, index) => {\n          return /*#__PURE__*/_jsxDEV(ProductItem, {\n            product: product\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 28\n          }, this);\n        });\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    let {\n      cart\n    } = this.props;\n    console.log(cart);\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nCartContainer.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      image1: PropTypes.string.isRequired,\n      image2: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      description: PropTypes.string.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }).isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nconst mapDispathToProps = (dispath, props) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispathToProps)(CartContainer);","map":{"version":3,"sources":["D:/Hoc Tap/cartproject/src/containers/CartContainer.js"],"names":["React","Component","connect","ProductItem","Product","PropTypes","CartContainer","showProducts","products","result","length","map","product","index","render","cart","props","console","log","propTypes","arrayOf","shape","id","string","isRequired","name","image1","image2","price","number","description","inventory","rating","quantity","mapStateToProps","state","mapDispathToProps","dispath"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAUlCM,YAVkC,GAUnBC,QAAQ,IAAI;AACvB,UAAIC,MAAM,GAAE,IAAZ;;AACI,UAAGD,QAAQ,CAACE,MAAT,GAAiB,CAApB,EAAsB;AAClBD,QAAAA,MAAM,GAAGD,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAmB;AACrC,8BAAO,QAAC,WAAD;AACa,YAAA,OAAO,EAAED;AADtB,aAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEH,SAHQ,CAAT;AAIH;;AACL,aAAOJ,MAAP;AACH,KAnBiC;AAAA;;AAClCK,EAAAA,MAAM,GAAG;AACL,QAAI;AAACC,MAAAA;AAAD,QAAS,KAAKC,KAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,wBACC;AAAA;AAAA;AAAA;AAAA,YADD;AAKH;;AATiC;;AAsBtCT,aAAa,CAACa,SAAd,GAAyB;AACrBX,EAAAA,QAAQ,EAAGH,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,KAAV,CAAgB;AACvCT,IAAAA,OAAO,EAAGP,SAAS,CAACgB,KAAV,CAAgB;AACxBC,MAAAA,EAAE,EAAGjB,SAAS,CAACkB,MAAV,CAAiBC,UADE;AAExBC,MAAAA,IAAI,EAACpB,SAAS,CAACkB,MAAV,CAAiBC,UAFE;AAGxBE,MAAAA,MAAM,EAACrB,SAAS,CAACkB,MAAV,CAAiBC,UAHA;AAIxBG,MAAAA,MAAM,EAACtB,SAAS,CAACkB,MAAV,CAAiBC,UAJA;AAKxBI,MAAAA,KAAK,EAACvB,SAAS,CAACwB,MAAV,CAAiBL,UALC;AAMxBM,MAAAA,WAAW,EAACzB,SAAS,CAACkB,MAAV,CAAiBC,UANL;AAOxBO,MAAAA,SAAS,EAAC1B,SAAS,CAACwB,MAAV,CAAiBL,UAPH;AAQxBQ,MAAAA,MAAM,EAAC3B,SAAS,CAACwB,MAAV,CAAiBL;AARA,KAAhB,EASPA,UAVoC;AAWvCS,IAAAA,QAAQ,EAAG5B,SAAS,CAACwB,MAAV,CAAiBL;AAXW,GAAhB,CAAlB,EAYHA;AAba,CAAzB;;AAgBA,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHpB,IAAAA,IAAI,EAAGoB,KAAK,CAACpB;AADV,GAAP;AAGH,CAJD;;AAMA,MAAMqB,iBAAiB,GAAG,CAACC,OAAD,EAAUrB,KAAV,KAAoB;AAC1C,SAAO,EAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAACgC,eAAD,EAAkBE,iBAAlB,CAAP,CAA6C9B,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport ProductItem from '../components/ProductItem';\r\nimport Product from '../components/Product';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CartContainer extends Component {\r\n    render() {\r\n        let {cart} = this.props\r\n        console.log(cart);\r\n        return (\r\n         <div>\r\n\r\n         </div>\r\n        );\r\n    }\r\n    showProducts = products => {\r\n        let result =null;\r\n            if(products.length >0){\r\n                result = products.map((product, index)=> {\r\n                    return <ProductItem key={index}\r\n                                        product={product} />\r\n                })\r\n            }\r\n        return result\r\n    }\r\n}\r\n\r\nCartContainer.propTypes ={\r\n    products : PropTypes.arrayOf(PropTypes.shape({\r\n          product : PropTypes.shape({\r\n            id : PropTypes.string.isRequired,\r\n            name:PropTypes.string.isRequired ,\r\n            image1:PropTypes.string.isRequired,\r\n            image2:PropTypes.string.isRequired ,\r\n            price:PropTypes.number.isRequired,\r\n            description:PropTypes.string.isRequired,\r\n            inventory:PropTypes.number.isRequired,\r\n            rating:PropTypes.number.isRequired\r\n          }).isRequired,\r\n          quantity : PropTypes.number.isRequired\r\n        })).isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cart : state.cart\r\n    }\r\n}\r\n\r\nconst mapDispathToProps = (dispath, props) => {\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps) (CartContainer);"]},"metadata":{},"sourceType":"module"}